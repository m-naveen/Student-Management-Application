{"ast":null,"code":"import axios from \"axios\";\n\n// Base API URL for the backend\nconst API_URL = \"http://localhost:8080/api/students\";\n\n// Ensures Axios sends cookies (if needed) for cross-origin requests\naxios.defaults.withCredentials = true;\n\n// Fetch all students\nexport const getStudents = async () => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};\n\n// Add a new student\nexport const addStudent = async student => {\n  try {\n    const response = await axios.post(API_URL, student, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding student:\", error);\n    throw error;\n  }\n};\n\n// Update an existing student\nexport const updateStudent = async (id, student) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, student, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating student:\", error);\n    throw error;\n  }\n};\n\n// Delete a student\nexport const deleteStudent = async id => {\n  try {\n    await axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  } catch (error) {\n    console.error(\"Error deleting student:\", error);\n    throw error;\n  }\n};\n\n// Search students by name\nexport const searchStudentByName = async name => {\n  try {\n    const response = await axios.get(`${API_URL}/search/${name}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error searching students by name:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","defaults","withCredentials","getStudents","response","get","headers","data","error","console","addStudent","student","post","updateStudent","id","put","deleteStudent","delete","searchStudentByName","name"],"sources":["/Users/naveenkumarmaloth/Documents/SynchronyWork/student-management-app/frontend/src/api/studentApi.js"],"sourcesContent":["import axios from \"axios\";\n\n// Base API URL for the backend\nconst API_URL = \"http://localhost:8080/api/students\";\n\n// Ensures Axios sends cookies (if needed) for cross-origin requests\naxios.defaults.withCredentials = true;\n\n// Fetch all students\nexport const getStudents = async () => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};\n\n// Add a new student\nexport const addStudent = async (student) => {\n  try {\n    const response = await axios.post(API_URL, student, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding student:\", error);\n    throw error;\n  }\n};\n\n// Update an existing student\nexport const updateStudent = async (id, student) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, student, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating student:\", error);\n    throw error;\n  }\n};\n\n// Delete a student\nexport const deleteStudent = async (id) => {\n  try {\n    await axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (error) {\n    console.error(\"Error deleting student:\", error);\n    throw error;\n  }\n};\n\n// Search students by name\nexport const searchStudentByName = async (name) => {\n  try {\n    const response = await axios.get(`${API_URL}/search/${name}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error searching students by name:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACAD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,OAAO,EAAE;MACxCM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACa,IAAI,CAACZ,OAAO,EAAEW,OAAO,EAAE;MAClDL,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEH,OAAO,KAAK;EAClD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,IAAIc,EAAE,EAAE,EAAEH,OAAO,EAAE;MAC5DL,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOF,EAAE,IAAK;EACzC,IAAI;IACF,MAAMf,KAAK,CAACkB,MAAM,CAAC,GAAGjB,OAAO,IAAIc,EAAE,EAAE,EAAE;MACrCR,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EACjD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,WAAWmB,IAAI,EAAE,EAAE;MAC5Db,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}