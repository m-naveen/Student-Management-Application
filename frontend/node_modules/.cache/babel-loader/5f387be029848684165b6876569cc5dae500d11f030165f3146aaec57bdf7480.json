{"ast":null,"code":"var _jsxFileName = \"/Users/naveenkumarmaloth/Documents/SynchronyWork/student-management-app/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddStudent from \"./AddStudent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const fetchStudents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/students\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setStudents(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleStudentAdded = newStudent => {\n    setStudents([...students, newStudent]);\n  };\n  const handleDeleteStudent = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/students/${id}`);\n      setStudents(students.filter(student => student.id !== id));\n      alert(\"Student deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting student:\", error);\n      alert(\"Failed to delete student.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddStudent, {\n      onStudentAdded: handleStudentAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - Age: \", student.age, \", Class: \", student.className, \", Phone: \", student.phoneNumber, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteStudent(student.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"xQFly/JqNiL5t+0iR4wJF+/IEY0=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","AddStudent","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","loading","setLoading","error","setError","fetchStudents","response","get","headers","data","err","message","handleStudentAdded","newStudent","handleDeleteStudent","id","delete","filter","student","alert","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onStudentAdded","map","name","age","className","phoneNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/naveenkumarmaloth/Documents/SynchronyWork/student-management-app/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddStudent from \"./AddStudent\";\n\nconst StudentList = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const fetchStudents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/students\", {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      setStudents(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  const handleStudentAdded = (newStudent) => {\n    setStudents([...students, newStudent]);\n  };\n\n  const handleDeleteStudent = async (id) => {\n    try {\n      await axios.delete(`http://localhost:8080/api/students/${id}`);\n      setStudents(students.filter((student) => student.id !== id));\n      alert(\"Student deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting student:\", error);\n      alert(\"Failed to delete student.\");\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>Student List</h2>\n      <AddStudent onStudentAdded={handleStudentAdded} />\n      <ul>\n        {students.map((student) => (\n          <li key={student.id}>\n            {student.name} - Age: {student.age}, Class: {student.className}, Phone: {student.phoneNumber}\n            <button onClick={() => handleDeleteStudent(student.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StudentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}